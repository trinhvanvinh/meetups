{"version":3,"sources":["component/MeetupItem.js","component/Meetups.js","component/About.js","component/MeetupDetails.js","component/AddMeetup.js","component/EditMeetup.js","component/Main.js","component/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["MeetupItem","props","state","item","className","to","this","id","name","Component","Meetups","meetups","getMeetups","axios","get","then","respone","setState","data","console","log","meetupItems","map","meetup","i","key","About","MeetupDetails","details","getMeetupID","meetupID","match","params","catch","err","delete","res","history","push","city","address","onClick","onDelete","bind","AddMeetup","e","newMeetup","refs","value","addMeetup","preventDefault","request","method","url","onSubmit","htmlFor","type","ref","EditMeetup","handleInputChange","getMeetupDetails","meetupId","editMeetup","target","onChange","Main","exact","path","component","Navbar","href","data-activates","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.1e6b758a.chunk.js","sourcesContent":["import React,{Component}  from \"react\";\nimport {Link} from 'react-router-dom';\n\nclass MeetupItem extends Component{\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      item: props.item\n    }\n\n  }\n\n\n  render() {\n    return(\n      <li className=\"collection-item\" >\n        <Link to={`/meetups/${this.state.item.id}`}>{this.state.item.name}</Link>\n      </li>\n    )\n  }\n}\n\nexport default MeetupItem;\n\n","import React, {Component} from 'react';\nimport axios from 'axios';\nimport MeetupItem from \"./MeetupItem\";\n\nclass Meetups extends Component{\n\n  constructor() {\n    super();\n    this.state = {\n      meetups: []\n    }\n  }\n\n  componentWillMount() {\n    this.getMeetups();\n  }\n\n  getMeetups(){\n    axios.get('http://localhost:3001/api/meetups')\n      .then(respone =>{\n        this.setState({\n          meetups: respone.data\n        }, ()=>{\n          console.log(\"state: \",respone.data);\n        })\n      })\n  }\n\n  render() {\n    const meetupItems = this.state.meetups.map((meetup, i)=>{\n      return (\n        <MeetupItem key={meetup.id} item = {meetup} />\n      )\n    })\n    return (\n      <div>\n        <h1>Meetups</h1>\n        <ul className=\"collection\" >\n          {meetupItems}\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport default Meetups;\n","import React from 'react';\n\n\nconst About=()=> (\n\n  <div >\n    <h1> About</h1>\n  </div>\n\n)\n\nexport default About;\n","import React,{Component}  from \"react\";\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\n\nclass MeetupDetails extends Component{\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      details: ''\n    }\n\n  }\n\n  componentWillMount() {\n    this.getMeetupID();\n  }\n\n  getMeetupID(){\n\n    let meetupID = this.props.match.params.id;\n\n    axios.get(`http://localhost:3001/api/meetups/${meetupID}`)\n      .then(respone => {\n        this.setState({details: respone.data}, ()=>{\n          console.log(\"data_meetID: \",this.state);\n        })\n      }).catch(err => console.log(err));\n  }\n\n  onDelete(){\n    let meetupID = this.state.details.id;\n    axios.delete(`http://localhost:3001/api/meetups/${meetupID}`)\n      .then(res=>{\n        this.props.history.push('/');\n      }).catch(err => console.log(err));\n  }\n\n\n  render() {\n    return(\n      <div>\n        <br />\n        <Link className=\"btn grey\" to=\"/\" >Back</Link>\n        <h1>{this.state.details.name}</h1>\n        <ul className=\"collection\" >\n          <li className=\"collection-item\" >City: {this.state.details.city}</li>\n          <li className=\"collection-item\" >Address: {this.state.details.address}</li>\n        </ul>\n        <Link className=\"btn\" to={`/meetups/edit/${this.state.details.id}`}>Edit</Link>\n\n        <button onClick={this.onDelete.bind(this)} className=\"btn red right\" >Delete</button>\n      </div>\n    )\n  }\n}\n\nexport default MeetupDetails;\n\n","import React, {Component} from \"react\";\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\n\nclass AddMeetup extends Component{\n\n  onSubmit(e){\n    const newMeetup={\n      name: this.refs.name.value,\n      city: this.refs.city.value,\n      address: this.refs.address.value\n    }\n    this.addMeetup(newMeetup);\n    e.preventDefault();\n\n  }\n\n  addMeetup(newMeetup){\n    console.log(\"handle \",newMeetup);\n    axios.request({\n      method: \"post\",\n      url:'http://localhost:3001/api/meetups',\n      data: newMeetup\n    }).then(res=>{\n      this.props.history.push('/');\n    }).catch((err=>console.log(err)));\n  }\n\n  render() {\n    return(\n      <div>\n        <br/>\n        <Link className=\"btn grey\" to=\"/\" >Back</Link>\n        <h1>Add meetup</h1>\n        <form onSubmit={this.onSubmit.bind(this)} >\n          <div className=\"input-field\" >\n            <label htmlFor=\"name\" >Name</label>\n            <input type=\"text\" name=\"name\" ref=\"name\"/>\n          </div>\n\n          <div className=\"input-field\" >\n            <label htmlFor=\"city\" >City</label>\n            <input type=\"text\" name=\"city\" ref=\"city\"/>\n          </div>\n\n          <div className=\"input-field\" >\n            <label htmlFor=\"address\" >Address</label>\n            <input type=\"text\" name=\"address\" ref=\"address\"/>\n          </div>\n\n          <input type=\"submit\" value=\"Save\" className=\"save\" />\n\n        </form>\n      </div>\n      )\n  }\n\n}\n\nexport default AddMeetup;\n","import React , {Component} from 'react';\nimport axios from 'axios';\nimport {Link} from \"react-router-dom\";\n\nclass EditMeetup extends Component{\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: '',\n      name: '',\n      city: '',\n      address: ''\n    }\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  componentWillMount() {\n    this.getMeetupDetails();\n  }\n\n  getMeetupDetails(){\n    let meetupId = this.props.match.params.id;\n    axios.get(`http://localhost:3001/api/meetups/${meetupId}`)\n      .then(res => {\n        this.setState({\n          id: res.data.id,\n          name: res.data.name,\n          address: res.data.address,\n          city: res.data.city\n        }, ()=>{\n          console.log(this.state);\n        })\n      }).catch(err=> console.log(err))\n  }\n\n  editMeetup(newMeetup){\n    axios.request({\n      method:'put',\n      url:`http://localhost:3001/api/meetups/${this.state.id}`,\n      data: newMeetup\n    }).then(res=>{\n      this.props.history.push('/')\n    }).catch(err=>console.log(err));\n  }\n\n  onSubmit(e){\n    const newMeetup={\n      name: this.refs.name.value,\n      city: this.refs.name.value,\n      address: this.refs.address.value,\n    }\n    this.editMeetup(newMeetup);\n    e.preventDefault();\n  }\n\n  handleInputChange(e){\n    const target = e.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    })\n\n  }\n\n  render() {\n    return(\n      <div>\n        <br/>\n        <Link className=\"btn grey\" to=\"/\" >Back</Link>\n        <h1>Edit Meetup</h1>\n        <form onSubmit={this.onSubmit.bind(this)} >\n          <div className=\"input-field\" >\n            <label htmlFor=\"name\" >Name</label>\n            <input type=\"text\" name=\"name\" ref=\"name\"\n                   value={this.state.name}\n                   onChange={this.handleInputChange.bind(this)} />\n          </div>\n\n          <div className=\"input-field\" >\n            <label htmlFor=\"city\" >City</label>\n            <input type=\"text\" name=\"city\" ref=\"city\"\n                   value={this.state.city}\n                   onChange={this.handleInputChange.bind(this)}/>\n          </div>\n\n          <div className=\"input-field\" >\n            <label htmlFor=\"address\" >Adress</label>\n            <input type=\"text\" name=\"address\" ref=\"address\"\n                   value={this.state.address}\n                   onChange={this.handleInputChange.bind(this)}/>\n          </div>\n\n          <input type=\"submit\" value=\"Edit\" className=\"edit\" />\n\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default EditMeetup;\n","import React from 'react';\nimport  {Switch, Route} from \"react-router-dom\";\n\nimport Meetups from \"./Meetups\";\nimport About from \"./About\";\nimport MeetupDetails from \"./MeetupDetails\";\nimport AddMeetup from './AddMeetup'\nimport EditMeetup from \"./EditMeetup\";\n\nconst Main = ()=>(\n  <main>\n    <Switch>\n      <Route exact path='/' component={Meetups} />\n      <Route exact path='/about' component={About} />\n      <Route exact path='/meetups/add' component={AddMeetup} />\n      <Route exact path='/meetups/:id' component={MeetupDetails} />\n      <Route exact path='/meetups/edit/:id' component={EditMeetup} />\n    </Switch>\n  </main>\n)\n\nexport default Main;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Navbar extends Component{\n  render(){\n    return (\n      <div>\n        <nav className=\"blue darken-3\">\n          <div className=\"nav-wrapper\">\n            <a href=\"/\" className=\"brand-logo center\">Meetupz</a>\n            <a data-activates=\"main-menu\" className=\"button-collapse show-on-large\">\n              <i className=\"fa fa-bars\"></i>\n            </a>\n            <ul className=\"right hide-on-small-only\">\n              <li><Link to=\"/\"><i className=\"fa fa-users\"></i> Meetups</Link></li>\n              <li><Link to=\"/meetups/add\"><i className=\"fa fa-plus\"></i> Add Meetup</Link></li>\n              <li><Link to=\"/about\"><i className=\"fa fa-question-circle\"></i> About</Link></li>\n            </ul>\n            <ul className=\"side-nav\" id=\"main-menu\">\n              <li><Link to=\"/\"><i className=\"fa fa-users\"></i> Meetups</Link></li>\n              <li><Link to=\"/meetups/add\"><i className=\"fa fa-plus\"></i> Add Meetup</Link></li>\n              <li><Link to=\"/about\"><i className=\"fa fa-question-circle\"></i> About</Link></li>\n            </ul>\n          </div>\n        </nav>\n      </div>\n    )\n  }\n}\n\nexport default Navbar;\n","import React from 'react';\nimport './App.css';\nimport Main from './component/Main';\nimport Navbar from \"./component/Navbar\";\n\nconst App=()=> (\n\n    <div >\n      <Navbar />\n      <div className=\"container\">\n        <Main/>\n      </div>\n\n    </div>\n\n)\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}